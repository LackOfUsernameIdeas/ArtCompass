import { FC, Fragment, useMemo, useState } from "react";
import { MoviesAndSeriesByRatingsChart } from "../../charts";
import { MoviesAndSeriesByRatingsDataType } from "../../platformStats-types";
import {
  paginateBarChartData,
  getTotalBarChartPages,
  handleBarChartPageChange,
  handleMoviesAndSeriesSortCategory
} from "../../helper_functions";
import { useMediaQuery } from "react-responsive";
import { moviesAndSeriesCategoryDisplayNames } from "../../platformStats-data";
import { Tooltip } from "react-tooltip";
import Pagination from "../../../../components/common/pagination/pagination";
import {
  Accordion,
  AccordionItem,
  AccordionTrigger,
  AccordionContent
} from "@/components/ui/accordion";
import { Card } from "@/components/ui/card";

interface MoviesAndSeriesByRatingsComponentProps {
  data: MoviesAndSeriesByRatingsDataType;
}

const MoviesAndSeriesByRatingsComponent: FC<
  MoviesAndSeriesByRatingsComponentProps
> = ({ data }) => {
  const pageSize = 5; // –†–∞–∑–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ (–±—Ä–æ–π –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
  const [currentChartPage, setCurrentChartPage] = useState(1); // –¢–µ–∫—É—â–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ç–∞
  const [moviesAndSeriesSortCategory, setMoviesAndSeriesSortCategory] =
    useState("IMDb"); // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞ —Å–æ—Ä—Ç–∏—Ä–∞–Ω–µ (IMDb, Metascore, RottenTomatoes)

  // –ú–µ–º–æ—Ä–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ –∑–∞ —Å–µ—Ä–∏–∏—Ç–µ –∑–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ç–∞ –Ω–∞ —Ñ–∏–ª–º–∏—Ç–µ
  const seriesDataForMoviesAndSeriesByRatingsChart = useMemo(() => {
    const sortedData =
      moviesAndSeriesSortCategory === "IMDb"
        ? data.sortedMoviesAndSeriesByIMDbRating // –ê–∫–æ –µ –∏–∑–±—Ä–∞–Ω–∞ IMDb, –∏–∑–ø–æ–ª–∑–≤–∞–π IMDb —Ä–µ–π—Ç–∏–Ω–≥–∏
        : moviesAndSeriesSortCategory === "Metascore"
        ? data.sortedMoviesAndSeriesByMetascore // –ê–∫–æ –µ –∏–∑–±—Ä–∞–Ω Metascore, –∏–∑–ø–æ–ª–∑–≤–∞–π Metascore
        : data.sortedMoviesAndSeriesByRottenTomatoesRating; // –ê–∫–æ –µ –∏–∑–±—Ä–∞–Ω RottenTomatoes, –∏–∑–ø–æ–ª–∑–≤–∞–π Rotten Tomatoes —Ä–µ–π—Ç–∏–Ω–≥

    // –í—Ä—ä—â–∞–º–µ –¥–∞–Ω–Ω–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏—è
    return paginateBarChartData(
      sortedData,
      currentChartPage,
      pageSize,
      moviesAndSeriesSortCategory
    );
  }, [currentChartPage, moviesAndSeriesSortCategory, data]);

  // –ú–µ–º–æ—Ä–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –æ–±—â–∏—è –±—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ç–∞
  const totalChartPages = useMemo(() => {
    return getTotalBarChartPages(
      data.sortedMoviesAndSeriesByIMDbRating.length, // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –¥—ä–ª–∂–∏–Ω–∞—Ç–∞ –Ω–∞ IMDb —Ä–µ–π—Ç–∏–Ω–≥–∏—Ç–µ
      pageSize
    );
  }, [data.sortedMoviesAndSeriesByIMDbRating.length, pageSize]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏—Ü–∏ –∑–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—è (–ø—Ä–µ–¥–∏—à–Ω–∞ –∏ —Å–ª–µ–¥–≤–∞—â–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
  const handlePrevChartPage = () => {
    handleBarChartPageChange(
      "prev", // –ü—Ä–µ–º–∏–Ω–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–µ–¥–∏—à–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      currentChartPage,
      pageSize,
      data.sortedMoviesAndSeriesByIMDbRating.length,
      setCurrentChartPage
    );
  };

  const handleNextChartPage = () => {
    handleBarChartPageChange(
      "next", // –ü—Ä–µ–º–∏–Ω–∞–≤–∞–Ω–µ –Ω–∞ —Å–ª–µ–¥–≤–∞—â–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      currentChartPage,
      pageSize,
      data.sortedMoviesAndSeriesByIMDbRating.length,
      setCurrentChartPage
    );
  };

  // –û—Ç–∑–∏–≤—á–∏–≤–∏ —Ç–æ—á–∫–∏ –∑–∞ –ø—Ä–µ–∫—ä—Å–≤–∞–Ω–µ
  const is1546 = useMediaQuery({ query: "(max-width: 1546px)" });

  return (
    <Fragment>
      <div className="xl:col-span-6 col-span-12">
        <div className="flex flex-col md:flex-row gap-8 box p-6 rounded-lg shadow-lg dark:text-gray-300 text-[#333335] justify-center items-center">
          {/* –õ—è–≤–∞ —á–∞—Å—Ç */}
          <Card className="bg-white dark:bg-bodybg2/50 dark:border-black/10 dark:text-defaulttextcolor/70 font-semibold text-xl p-4 rounded-md shadow-lg dark:shadow-xl text-center leading-relaxed md:w-1/2 mx-auto">
            <h2 className="text-2xl opsilion text-defaulttextcolor dark:text-white/80">
              –í —Ç–∞–∑–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –≤–∏–¥–∏—Ç–µ –∫–ª–∞—Å–∞—Ü–∏—è –Ω–∞ —Ñ–∏–ª–º–∏—Ç–µ –∏ —Å–µ—Ä–∏–∞–ª–∏—Ç–µ
              –ø–æ —Ç–µ—Ö–Ω–∏—è –¥–æ–±–∞–≤–µ–Ω–∏—Ç–µ –æ—Ç –≤–∞—Å –∫–Ω–∏–≥–∏ –≤{" "}
              <span className="font-bold text-primary">
                IMDb, Rotten Tomatoes –∏–ª–∏ –ú–µ—Ç–∞—Å–∫–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥{" "}
              </span>
              !
            </h2>
          </Card>
          {/* –î—è—Å–Ω–∞ —á–∞—Å—Ç*/}
          <div className="md:w-1/2 text-sm]">
            <Accordion type="single" collapsible className="space-y-4">
              {/* IMDb */}
              <AccordionItem value="imdb">
                <AccordionTrigger className="opsilion">
                  üé¨ IMDb —Ä–µ–π—Ç–∏–Ω–≥
                </AccordionTrigger>
                <AccordionContent className="pl-4">
                  –°—Ä–µ–¥–Ω–∞ –æ—Ü–µ–Ω–∫–∞, –∫–æ—è—Ç–æ –¥–∞–¥–µ–Ω —Ñ–∏–ª–º –ø–æ–ª—É—á–∞–≤–∞ –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ –Ω–∞
                  <span className="font-semibold"> IMDb</span>. –û—Ü–µ–Ω–∫–∏—Ç–µ –≤–∞—Ä–∏—Ä–∞—Ç
                  –æ—Ç <span className="font-semibold">1 –¥–æ 10</span> –∏ –æ—Ç—Ä–∞–∑—è–≤–∞—Ç
                  –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—Ç–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ—Ç–æ –Ω–∞ —Ñ–∏–ª–º–∞.
                </AccordionContent>
              </AccordionItem>

              {/* Rotten tomatoes */}
              <AccordionItem value="rotten">
                <AccordionTrigger className="opsilion">
                  üçÖ –°—Ä–µ–¥–µ–Ω Rotten Tomatoes —Ä–µ–π—Ç–∏–Ω–≥
                </AccordionTrigger>
                <AccordionContent className="pl-4">
                  <span className="font-semibold">Rotten Tomatoes</span> –µ
                  –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø–æ–∫–∞–∑–≤–∞—â–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–∏—Ç–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –æ—Ç
                  –∫—Ä–∏—Ç–∏—Ü–∏ <span className="font-semibold"> (Tomatometer)</span>{" "}
                  –∏–ª–∏ –æ—Ç –∑—Ä–∏—Ç–µ–ª–∏
                  <span className="font-semibold"> (Audience Score)</span>.
                  –°—Ä–µ–¥–Ω–∏—è—Ç —Ä–µ–π—Ç–∏–Ω–≥ –µ —Å—Ä–µ–¥–Ω–∞—Ç–∞ –æ—Ü–µ–Ω–∫–∞{" "}
                  <span className="font-semibold"> (–æ—Ç 0 –¥–æ 10)</span> –Ω–∞ –≤—Å–∏—á–∫–∏
                  —Ä–µ–≤—é—Ç–∞, –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–∏—Ç–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏.
                </AccordionContent>
              </AccordionItem>

              {/* Rotten tomatoes */}
              <AccordionItem value="metascore">
                <AccordionTrigger className="opsilion">
                  üí° –°—Ä–µ–¥–µ–Ω Metascore —Ä–µ–π—Ç–∏–Ω–≥
                </AccordionTrigger>
                <AccordionContent className="pl-4">
                  <span className="font-semibold">Metascore</span> –µ –æ—Ü–µ–Ω–∫–∞ –æ—Ç
                  –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ç–∞ <span className="font-semibold">Metacritic</span>,
                  –∫–æ—è—Ç–æ —Å—ä–±–∏—Ä–∞ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –æ—Ç –∫—Ä–∏—Ç–∏—Ü–∏ –∏ –≥–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞ –≤ –æ–±—â–∞
                  —á–∏—Å–ª–æ–≤–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç{" "}
                  <span className="font-semibold">(–æ—Ç 0 –¥–æ 100)</span>.{" "}
                  <span className="font-semibold">
                    –°—Ä–µ–¥–Ω–∏—è—Ç Metascore —Ä–µ–π—Ç–∏–Ω–≥
                  </span>{" "}
                  –µ —É—Å—Ä–µ–¥–Ω–µ–Ω–∞—Ç–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç –Ω–∞ —Ç–µ–∑–∏ –æ—Ü–µ–Ω–∫–∏ –∑–∞ –¥–∞–¥–µ–Ω/–∏ —Ñ–∏–ª–º/–∏.
                </AccordionContent>
              </AccordionItem>
            </Accordion>
          </div>
        </div>
        <div className="box custom-box">
          <div className="custom-box-header justify-between">
            <div className={`box-title opsilion`}>
              {`–§–∏–ª–º–∏ –∏ —Å–µ—Ä–∏–∞–ª–∏ –ø–æ ${
                moviesAndSeriesCategoryDisplayNames[
                  moviesAndSeriesSortCategory as keyof typeof moviesAndSeriesCategoryDisplayNames
                ]
              }`}
            </div>

            <div className="flex flex-wrap gap-2">
              <div
                className="inline-flex rounded-md shadow-sm"
                role="group"
                aria-label="Sort By"
              >
                {["IMDb", "Metascore", "RottenTomatoes"].map(
                  (category, index) => (
                    <button
                      key={category}
                      type="button"
                      className={`ti-btn-group !border-0 !text-xs !py-2 !px-3 opsilion ${
                        category === moviesAndSeriesSortCategory
                          ? "ti-btn-primary-full text-white"
                          : "text-[#CC3333] dark:text-[#E74581] bg-[#9A110A] dark:bg-[#AF0B48] bg-opacity-10 dark:bg-opacity-10"
                      } ${
                        index === 0
                          ? "rounded-l-md"
                          : index === 2
                          ? "rounded-r-md"
                          : ""
                      }`}
                      onClick={() =>
                        handleMoviesAndSeriesSortCategory(
                          category,
                          setMoviesAndSeriesSortCategory
                        )
                      }
                    >
                      {
                        moviesAndSeriesCategoryDisplayNames[
                          category as keyof typeof moviesAndSeriesCategoryDisplayNames
                        ]
                      }
                    </button>
                  )
                )}
              </div>
            </div>
          </div>

          <div className="box-body h-[21.75rem]">
            <div id="bar-basic">
              <MoviesAndSeriesByRatingsChart
                seriesData={seriesDataForMoviesAndSeriesByRatingsChart}
                category={moviesAndSeriesSortCategory}
              />
            </div>
          </div>
          <div className="box-footer">
            <Pagination
              currentPage={currentChartPage}
              totalItems={data.sortedMoviesAndSeriesByIMDbRating.length}
              itemsPerPage={5}
              totalTablePages={totalChartPages}
              isSmallScreen={is1546}
              handlePrevPage={handlePrevChartPage}
              handleNextPage={handleNextChartPage}
              setCurrentPage={setCurrentChartPage}
            />
          </div>
        </div>
      </div>
    </Fragment>
  );
};

export default MoviesAndSeriesByRatingsComponent;
