import { FC, useEffect, useState, useCallback } from "react";
import AIAnalysisDashboard from "./Components/AIAnalysisDashboard";
import {
  F1ScoreData,
  PrecisionData,
  RecallData,
  RecommendationsAnalysis
} from "./aiAnalysator-types";
import RecommendationsAnalysesWidgets from "@/components/common/recommendationsAnalyses/recommendationsAnalyses";
import { Card } from "@/components/ui/card";
import FadeInWrapper from "@/components/common/loader/fadeinwrapper";
import {
  checkRelevanceForLastSavedRecommendations,
  getF1Score,
  getPrecisionTotal,
  getRecallTotal
} from "./helper_functions";
import { analyzeRecommendations } from "../helper_functions_common";
import ErrorCard from "@/components/common/error/error";
import {
  Accordion,
  AccordionItem,
  AccordionTrigger,
  AccordionContent
} from "@/components/ui/accordion";

const AIAnalysator: FC = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [inTransition, setInTransition] = useState(false);
  const [direction, setDirection] = useState<"left" | "right">("right");
  const [precisionData, setPrecisionData] = useState<PrecisionData | null>(
    null
  );
  const [recallData, setRecallData] = useState<RecallData | null>(null);
  const [f1ScoreData, setF1ScoreData] = useState<F1ScoreData | null>(null);
  const [recommendationsAnalysis, setRecommendationsAnalysis] =
    useState<RecommendationsAnalysis>({
      relevantCount: 0,
      totalCount: 0,
      precisionValue: 0,
      precisionPercentage: 0,
      relevantRecommendations: []
    });
  const [showError, setShowError] = useState<boolean>(false);

  useEffect(() => {
    const fetchData = async () => {
      const token =
        localStorage.getItem("authToken") ||
        sessionStorage.getItem("authToken");
      if (!token) return;

      try {
        const lastSavedRecommendationsAndPreferences =
          await checkRelevanceForLastSavedRecommendations(token);

        const {
          lastSavedRecommendations,
          relevanceResults,
          lastSavedUserPreferences
        } = lastSavedRecommendationsAndPreferences;

        if (
          lastSavedRecommendations.length > 0 &&
          relevanceResults.length > 0 &&
          lastSavedUserPreferences
        ) {
          const [precisionObject, recallObject] = await Promise.all([
            getPrecisionTotal(
              token,
              lastSavedRecommendationsAndPreferences.lastSavedUserPreferences!
            ),
            getRecallTotal(
              token,
              lastSavedRecommendationsAndPreferences.lastSavedUserPreferences!
            )
          ]);

          const f1ScoreObject = await getF1Score(
            precisionObject.precision_exact,
            recallObject.recall_exact
          );

          setPrecisionData(precisionObject);
          setRecallData(recallObject);
          setF1ScoreData(f1ScoreObject);

          // Extract user preferences and recommendations
          const {
            lastSavedUserPreferences,
            lastSavedRecommendations,
            relevanceResults
          } = lastSavedRecommendationsAndPreferences;

          if (relevanceResults) {
            await analyzeRecommendations(
              lastSavedUserPreferences,
              lastSavedRecommendations,
              setRecommendationsAnalysis,
              false
            );
          }
        } else {
          setShowError(true);
        }
      } catch (error) {
        console.error("Error fetching AI analysis data:", error);
      }
    };

    fetchData();
  }, []);

  const handleNext = useCallback(() => {
    setDirection("right");
    setInTransition(true);

    setTimeout(() => {
      setCurrentIndex((prevIndex) =>
        recommendationsAnalysis?.relevantRecommendations.length
          ? (prevIndex + 1) %
            recommendationsAnalysis.relevantRecommendations.length
          : 0
      );
      setInTransition(false);
    }, 500);
  }, [recommendationsAnalysis]);

  const handlePrev = useCallback(() => {
    setDirection("left");
    setInTransition(true);

    setTimeout(() => {
      setCurrentIndex((prevIndex) =>
        recommendationsAnalysis?.relevantRecommendations.length
          ? (prevIndex -
              1 +
              recommendationsAnalysis.relevantRecommendations.length) %
            recommendationsAnalysis.relevantRecommendations.length
          : 0
      );
      setInTransition(false);
    }, 500);
  }, [recommendationsAnalysis]);

  // –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ —Å–∞–º–æ —Å–ª–µ–¥ –∫–∞—Ç–æ –µ –¥–æ—à—ä–ª –æ—Ç–≥–æ–≤–æ—Ä—ä—Ç –æ—Ç –∑–∞—è–≤–∫–∏—Ç–µ
  const renderRecommendationsAnalysis =
    recommendationsAnalysis.relevantRecommendations.length > 0;

  return (
    <FadeInWrapper>
      {!showError ? (
        <div className="p-[1.5rem]">
          <div className="z-10 max-w-6xl w-full mx-auto font-mono text-sm">
            <div className="text-center !text-lg box p-6 flex flex-col gap-6 !rounded-xl justify-center items-center">
              <Card className="bg-white dark:bg-bodybg2/50 dark:border-black/10 dark:text-defaulttextcolor/70 font-semibold text-xl p-4 rounded-md shadow-lg dark:shadow-xl text-center leading-relaxed mx-auto">
                <h2 className="text-4xl opsilion text-defaulttextcolor dark:text-white/80">
                  –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –∑–Ω–∞–µ—Ç–µ –∫–æ–ª–∫–æ –¥–æ–±—Ä–µ —Å–µ –µ —Å–ø—Ä–∞–≤–∏–ª AI-—ä—Ç —Å
                  –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ —Å–ø–µ—Ü–∏–∞–ª–Ω–æ –∑–∞ –í–∞—Å?
                </h2>
              </Card>
              <Card className="bg-white dark:bg-bodybg2/50 dark:border-black/10 dark:text-defaulttextcolor/70 font-semibold text-xl p-4 w-full rounded-md shadow-lg dark:shadow-xl text-center leading-relaxed mx-auto">
                <h2 className="text-xl text-defaulttextcolor dark:text-white/80">
                  –ó–∞ —Ü–µ–ª—Ç–∞ –µ –ø—Ä–µ–ø–æ—Ä—ä—á–∏—Ç–µ–ª–Ω–æ –ø—ä—Ä–≤–æ –¥–∞ —Å–µ –∑–∞–ø–æ–∑–Ω–∞–µ—Ç–µ —Å—ä—Å —Å–ª–µ–¥–Ω–∏—Ç–µ
                  –ø–æ–Ω—è—Ç–∏—è:
                </h2>
              </Card>
              <div className="text-sm w-full">
                <Accordion type="single" collapsible className="space-y-4">
                  {/* Metascore */}
                  <AccordionItem value="metascore">
                    <AccordionTrigger className="opsilion">
                      üí°Metascore —Ä–µ–π—Ç–∏–Ω–≥
                    </AccordionTrigger>
                    <AccordionContent className="pl-4">
                      <span className="font-semibold">Metascore</span> –µ –æ—Ü–µ–Ω–∫–∞
                      –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ç–∞{" "}
                      <span className="font-semibold">Metacritic</span>, –∫–æ—è—Ç–æ
                      —Å—ä–±–∏—Ä–∞ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –æ—Ç –∫—Ä–∏—Ç–∏—Ü–∏ –∏ –≥–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞ –≤ –æ–±—â–∞ —á–∏—Å–ª–æ–≤–∞
                      —Å—Ç–æ–π–Ω–æ—Å—Ç{" "}
                      <span className="font-semibold">(–æ—Ç 0 –¥–æ 100)</span>.{" "}
                      <span className="font-semibold">
                        –°—Ä–µ–¥–Ω–∏—è—Ç Metascore —Ä–µ–π—Ç–∏–Ω–≥
                      </span>{" "}
                      –µ —É—Å—Ä–µ–¥–Ω–µ–Ω–∞—Ç–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç –Ω–∞ —Ç–µ–∑–∏ –æ—Ü–µ–Ω–∫–∏ –∑–∞ –¥–∞–¥–µ–Ω/–∏ —Ñ–∏–ª–º/–∏.
                    </AccordionContent>
                  </AccordionItem>

                  {/* –ë–æ–∫—Å–æ—Ñ–∏—Å */}
                  <AccordionItem value="boxoffice">
                    <AccordionTrigger className="opsilion">
                      üí∞ –ë–æ–∫—Å–æ—Ñ–∏—Å
                    </AccordionTrigger>
                    <AccordionContent className="pl-4">
                      –û–±—â–∞—Ç–∞ —Å—É–º–∞ –Ω–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –æ—Ç –ø—Ä–æ–¥–∞–∂–±–∞ –Ω–∞ –±–∏–ª–µ—Ç–∏ –≤
                      –∫–∏–Ω–æ—Å–∞–ª–æ–Ω–∏—Ç–µ. –ò–∑–º–µ—Ä–≤–∞ —Å–µ –≤{" "}
                      <span className="font-semibold">
                        –º–∏–ª–∏–æ–Ω–∏ –∏–ª–∏ –º–∏–ª–∏–∞—Ä–¥–∏ –¥–æ–ª–∞—Ä–∏
                      </span>{" "}
                      –∏ –µ –∫–ª—é—á–æ–≤ –ø–æ–∫–∞–∑–∞—Ç–µ–ª –∑–∞ —Ç—ä—Ä–≥–æ–≤—Å–∫–∏—è —É—Å–ø–µ—Ö –Ω–∞ —Ñ–∏–ª–º–∞.
                    </AccordionContent>
                  </AccordionItem>

                  {/* –ü—Ä–æ—Å–ø–µ—Ä–∏—Ç–µ—Ç */}
                  <AccordionItem value="prosperity">
                    <AccordionTrigger className="opsilion">
                      üéâ –ü—Ä–æ—Å–ø–µ—Ä–∏—Ç–µ—Ç–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥
                    </AccordionTrigger>
                    <AccordionContent className="px-5 py-3 space-y-3">
                      <p>
                        <strong className="text-lg">–ü—Ä–æ—Å–ø–µ—Ä–∏—Ç–µ—Ç—ä—Ç </strong>
                        —Å–µ –ø–æ–ª—É—á–∞–≤–∞ –∫–∞—Ç–æ —Å–µ –∏–∑—á–∏—Å–ª–∏ —Å–±–æ—Ä—ä—Ç –Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ –Ω–∞
                        –Ω—è–∫–æ–ª–∫–æ –∫—Ä–∏—Ç–µ—Ä–∏–∏. –ó–∞ –≤—Å–µ–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏–π —Å–µ –∑–∞–¥–∞–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
                        –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ, –∫–æ–µ—Ç–æ –æ—Ç—Ä–∞–∑—è–≤–∞ –Ω–µ–≥–æ–≤–∞—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç
                        —Å–ø—Ä—è–º–æ –æ—Å—Ç–∞–Ω–∞–ª–∏—Ç–µ:
                      </p>
                      <ul className="list-disc coollist pl-6 pt-3 space-y-1">
                        <li>
                          <strong>30%</strong> –∑–∞ —Å–ø–µ—á–µ–ª–µ–Ω–∏ –Ω–∞–≥—Ä–∞–¥–∏
                        </li>
                        <li>
                          <strong>25%</strong> –∑–∞ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏
                        </li>
                        <li>
                          <strong>15%</strong> –∑–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –æ—Ç –±–æ–∫—Å–æ—Ñ–∏—Å
                        </li>
                        <li>
                          <strong>10%</strong> –∑–∞ –ú–µ—Ç–∞—Å–∫–æ—Ä
                        </li>
                        <li>
                          <strong>10%</strong> –∑–∞ IMDb —Ä–µ–π—Ç–∏–Ω–≥
                        </li>
                        <li>
                          <strong>10%</strong> –∑–∞ Rotten Tomatoes —Ä–µ–π—Ç–∏–Ω–≥
                        </li>
                      </ul>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              </div>
            </div>

            {precisionData && recallData && f1ScoreData && (
              <AIAnalysisDashboard
                precisionData={precisionData}
                recallData={recallData}
                f1ScoreData={f1ScoreData}
              />
            )}
            {renderRecommendationsAnalysis && (
              <RecommendationsAnalysesWidgets
                recommendationsAnalysis={recommendationsAnalysis}
                currentIndex={currentIndex}
                handlePrev={handlePrev}
                handleNext={handleNext}
                inTransition={inTransition}
                setInTransition={setInTransition}
                direction={direction}
              />
            )}
          </div>
        </div>
      ) : (
        <ErrorCard
          message="üîç –ó–∞ –¥–∞ –º–æ–∂–µ—Ç–µ –¥–∞ —Ä–∞–∑–≥–ª–µ–¥–∞—Ç–µ –∫–æ–ª–∫–æ –¥–æ–±—Ä–µ —Å–µ –µ —Å–ø—Ä–∞–≤–∏–ª AI-—ä—Ç —Å
                –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ –≤–∞—Å, –º–æ–ª—è, –ø—ä—Ä–≤–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–π—Ç–µ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ —Ñ–∏–ª–º–∏ –∏ —Å–µ—Ä–∏–∞–ª–∏."
        />
      )}
    </FadeInWrapper>
  );
};

export default AIAnalysator;
